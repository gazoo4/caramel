apply plugin: 'com.android.application'
apply plugin: "androidsvgdrawable"

android {
    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
        release {
            keyAlias 'release'
            keyPassword 'release'
            storePassword 'release'
        }
    }
    compileSdkVersion 22
    buildToolsVersion "23.0.1"
    defaultConfig {
        applicationId "sk.berops.android.fueller"
        minSdkVersion 21
        targetSdkVersion 22
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
}

configurations {
    compile.exclude module: 'stax'
    compile.exclude module: 'stax-api'
    compile.exclude module: 'xpp3'
}

repositories {
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    compile 'com.android.support:recyclerview-v7:+'
    compile 'com.github.PhilJay:MPAndroidChart:v2.1.5'
    compile 'com.jjoe64:graphview:3.1.4'
    compile 'com.larswerkman:lobsterpicker:1.0.1'
    compile 'org.apache.commons:commons-math3:3.5'
    compile 'org.simpleframework:simple-xml:2.7.1'
}

// create a task to convert SVG to PNG
// create a task to convert SVG to PNG DRAWABLE
/*
task svgToDrawablePng(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
    // specify where to pick SVG from
    from = files('src/main/assets/svg')
    // specify the android res folder
    to = file('src/main/res')
    // create qualified directories if missing
    createMissingDirectories = true
    // override files only if necessary
    overwriteMode = 'ifModified'
    // let generate PNG for the following densities only
    // if none specified, all densities will be used
    targetedDensities = ['ldpi', 'hdpi', 'mdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    // output format of the generated resources
    outputFormat = 'PNG'
    // output type is drawable (default)
    outputType = 'drawable'
}
*/
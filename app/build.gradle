buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'androidsvgdrawable'

android {
    adbOptions {
        timeOutInMs = 30 * 1000;
    }
    dexOptions {
        javaMaxHeapSize "2g"
    }
    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
        release {
            keyAlias "$kAlias"
            keyPassword "$kPass"
            storePassword "$sPass"
            storeFile file("$sFile")
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "sk.berops.android.fueller"
        versionCode 9
        versionName "Ignition"
        minSdkVersion 21
        targetSdkVersion 25
        multiDexEnabled true
        jackOptions {
            enabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField 'String', 'APP_API', "$appApi"
            buildConfigField 'String', 'OBFUSCATE_KEY', "$obfuscateKey"
        }
        debug {
            signingConfig signingConfigs.debug
            // Disable fabric build ID generation for debug builds
            // If you get io.fabric.sdk android.services.concurrency.UnmetDependencyException: This app relies on Crashlytics
            // uncomment this line for at least one run. This usually happens after a Crashlytics version upgrade
            // ext.enableCrashlytics = false
            buildConfigField 'String', 'APP_API', "$appApi"
            buildConfigField 'String', 'OBFUSCATE_KEY', "$obfuscateKey"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations {
    compile.exclude module: 'stax'
    compile.exclude module: 'stax-api'
    compile.exclude module: 'xpp3'
}

repositories {
    maven {
        url "https://jitpack.io"
    }
    maven {
        url 'https://maven.fabric.io/public'
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:25.2.0'       // this needs to be the of the same version as compileSDK indicator
    compile 'com.android.support:recyclerview-v7:25.2.0'    // this needs to be the of the same version as compileSDK indicator
    compile 'com.android.support:support-v4:25.2.0'         // this needs to be the of the same version as compileSDK indicator
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.1'
    compile 'com.jjoe64:graphview:3.1.4'
    compile 'com.larswerkman:lobsterpicker:1.0.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    compile 'org.apache.commons:commons-math3:3.5'
    compile 'org.simpleframework:simple-xml:2.7.1'
}

afterEvaluate {
    assembleDebug.dependsOn "generatePng"
}

task generatePng(type:Exec) {
    println 'Generating PNG files from SVG images'

    def srcDir = "$workingDir/src/main/assets/svg"
    def dstDir = "$workingDir/src/main/res"

    // working dir defaults to the project dir
    commandLine "bash", "./support_utils/svgconvert.sh", "$srcDir", "$dstDir"
}